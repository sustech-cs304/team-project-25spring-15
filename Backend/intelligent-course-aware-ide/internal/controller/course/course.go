// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package course

import (
	"errors"
	"intelligent-course-aware-ide/internal/dao"
	"intelligent-course-aware-ide/internal/model/do"
	"intelligent-course-aware-ide/internal/model/entity"

	"context"
)

func CheckUserIsSuperUserOrTeacher(ctx context.Context, userId int64) bool {
	var user *entity.Users
	err := dao.Users.Ctx(ctx).WherePri(userId).Scan(&user)
	if err != nil || user == nil {
		return false
	}

	if user.IdentityU == "superuser" || user.IdentityU == "teacher" {
		return true
	}

	return false
}

func CheckUserHasFullPermissionOfCourse(ctx context.Context, userId int64, courseId int64) (result bool, err error) {
	var user *entity.Users
	err = dao.Users.Ctx(ctx).WherePri(userId).Scan(&user)
	if err != nil {
		return false, err
	}

	if user.IdentityU == "superuser" {
		return true, nil
	}

	var course *entity.Courses
	err = dao.Courses.Ctx(ctx).WherePri(courseId).Scan(&course)
	if err != nil {
		return false, err
	}

	if userId == course.TeacherId {
		return true, nil
	}

	return false, err
}

func CheckUserHasHalfPermissionOfCourse(ctx context.Context, userId int64, courseId int64) (result bool, err error) {
	var userFound *entity.CourseAssistants
	err = dao.CourseAssistants.Ctx(ctx).Where(do.CourseAssistants{
		CourseId:    courseId,
		AssistantId: userId,
	}).Scan(&userFound)

	if err != nil || userFound == nil {
		return false, errors.New("maybe it is because user not found ")
	}

	return true, nil
}
